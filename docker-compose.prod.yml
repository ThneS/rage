version: "3.8"

services:
  # 后端服务
  backend:
    image: ghcr.io/thnes/rage-backend:latest
    container_name: rage-backend-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - CORS_ORIGINS=http://localhost:3000,https://your-domain.com
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - rage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 前端服务
  frontend:
    image: ghcr.io/thnes/rage-frontend:latest
    container_name: rage-frontend-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - rage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 可选：数据库服务
  # postgres:
  #   image: postgres:15
  #   container_name: rage-postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: rage
  #     POSTGRES_USER: rage_user
  #     POSTGRES_PASSWORD: your_secure_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - rage-network

  # 可选：Redis 缓存
  # redis:
  #   image: redis:7-alpine
  #   container_name: rage-redis
  #   restart: unless-stopped
  #   networks:
  #     - rage-network

networks:
  rage-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
