# RAG 参数调测平台 - 开发环境配置
# 使用 Milvus Standalone 模式，简化开发环境部署

services:
  # 后端服务
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
      target: development # 使用开发阶段
    container_name: rage-backend-dev
    restart: unless-stopped
    environment:
      - ENV_FILE=/app/.env
      - DATABASE_URL=sqlite:///./rage.db
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
    volumes:
      - ../backend:/app # 开发模式：挂载源码目录
      - ../backend/uploads:/app/uploads
      - ../backend/logs:/app/logs
      - ../backend/.env:/app/.env:ro
      - backend_data:/app/data
    ports:
      - "8000:8000"
    depends_on:
      milvus:
        condition: service_healthy
    networks:
      - rage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    # 开发模式：启用热重载
    command:
      [
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
      ]

  # 前端服务 (开发模式)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      target: development # 使用开发阶段
    container_name: rage-frontend-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000
    volumes:
      - ../frontend:/app # 开发模式：挂载源码目录
      - /app/node_modules # 保护 node_modules
    ports:
      - "5173:5173" # Vite 开发服务器端口
    depends_on:
      - backend
    networks:
      - rage-network
    # 开发模式：启用热重载
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

  # Milvus 向量数据库 (Standalone 模式 - 开发环境专用)
  milvus:
    image: milvusdb/milvus:v2.3.4
    container_name: rage-milvus-dev
    restart: unless-stopped
    command: ["milvus", "run", "standalone"]
    environment:
      # Standalone 模式配置
      - ETCD_USE_EMBED=true
      - ETCD_DATA_DIR=/var/lib/milvus/etcd
      - COMMON_STORAGETYPE=local
      # 开发环境优化配置
      - COMMON_SECURITY_AUTHORIZATIONENABLED=false
      - LOG_LEVEL=info
      - DATANODE_MEMORY_FORCESYNCENABLED=false
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530" # Milvus gRPC 端口
      - "9091:9091" # Milvus HTTP 端口 (监控和健康检查)
    networks:
      - rage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s # Milvus 启动需要时间

volumes:
  backend_data:
    driver: local
  milvus_data:
    driver: local

networks:
  rage-network:
    driver: bridge
    name: rage-dev-network
