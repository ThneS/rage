name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # 测试
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [frontend, backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 前端测试
      - name: Setup Node.js
        if: matrix.component == 'frontend'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Test frontend
        if: matrix.component == 'frontend'
        run: |
          cd frontend
          npm ci
          npm run type-check
          npm run lint
          npm run build

      # 后端测试
      - name: Setup Python
        if: matrix.component == 'backend'
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: backend/requirements.txt

      - name: Test backend
        if: matrix.component == 'backend'
        run: |
          cd backend
          pip install -r requirements.txt
          pip install pytest mypy
          mypy app/ --ignore-missing-imports || true
          pytest tests/ || true

  # 构建镜像
  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    strategy:
      matrix:
        component: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.component }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.component }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.component }}:latest

  # 部署
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Deploy to environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "🚀 部署到生产环境"
            ENV="production"
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "🚀 部署到开发环境"
            ENV="development"
          else
            echo "⏭️ 跳过部署"
            exit 0
          fi

          echo "环境: $ENV"
          echo "后端镜像: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ github.sha }}"
          echo "前端镜像: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:${{ github.sha }}"

          # 这里添加实际的部署命令
          # docker-compose up -d 或 kubectl apply 等
